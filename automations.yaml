# https://www.home-assistant.io/docs/automation/trigger/
# https://www.home-assistant.io/integrations/system_log/

####################################################
#                                                  #
#                    DuckDns                       #
#                                                  #
####################################################
- alias: "Duckdns Update Hourly"
  trigger: 
    - platform: time_pattern
      hours: '/1'
      minutes: '00'
      seconds: '00'
  action:
    - service: shell_command.curl_duckdns
      data:
        domain: !secret duckdns_domain
        token: !secret duckdns_token
    - service: system_log.write
      data:
        message: "Automation: Duckdns updated"
        level: info


####################################################
#                                                  #
#                      HA Alarm                    #
#                                                  #
####################################################
- alias: 'Trigger alarm while armed away'
  trigger:
      # Porta Ingresso
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_a9b39306_on_off
      from: 'off'
      to: 'on'
      # Porta finestra Soggiorno
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_431b9b06_on_off
      from: 'off'
      to: 'on'
      # Porta finestra Cucina
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_441a9b06_on_off
      from: 'off'
      to: 'on'
      # Porta finestra Cameretta
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_magnet_aq2_cbb79306_on_off
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.home_alarm
      state: armed_away
  action:
    service: alarm_control_panel.alarm_trigger
    target:
      entity_id: alarm_control_panel.home_alarm


- alias: 'Send notification when alarm triggered'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "triggered"
  action:
    - service: notify.pbf
      data:
        title: "Allarme scattato"
        message: "Attenzione! L'allarme è stato fatto scattare"

- alias: 'Send notification when alarm is Disarmed'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "disarmed"
  action:
    - service: notify.pbf
      data:
        title: "Allarme disattivato"
        message: "Allarme disattivato alle {{ states('sensor.date') }} {{ states('sensor.time') }}"

- alias: 'Send notification when alarm is in pending status'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "pending"
  action:
    - service: notify.pbf
      data:
        title: "Allarme in attesa"
        message: "Allarme in attesa alle {{ states('sensor.date') }}"

- alias: 'Send notification when alarm is Armed in Away mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "armed_away"
  action:
    - service: notify.pbf
      data:
        title: "Allarme attivato"
        message: "Allarme in modalità Fuori Casa {{ states('sensor.date') }} {{ states('sensor.time') }}"

- alias: 'Send notification when alarm is Armed in Home mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "armed_home"
  action:
    - service: notify.pbf
      data:
        title: "Allarme attivato"
        message: "Allarme in modalità Casa {{ states('sensor.date') }} {{ states('sensor.time') }}"

- alias: 'Send notification when alarm is Armed in Night mode'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_alarm
      to: "armed_night"
  action:
    - service: notify.pbf
      data:
        title: "Allarme attivato"
        message: "Allarme in modalità Notte {{ states('sensor.date') }} {{ states('sensor.time') }}"


####################################################
#                                                  #
#                    Kiosk                         #
#                                                  #
####################################################
- alias: "Tablet - Start charging"
  trigger:
    - platform: time
      at: "07:00:00"
  action:
    - service: switch.turn_on
      data:
        entity_id: switch.smartplug_02

- alias: "Tablet - Stop charging"
  trigger:
    - platform: time
      at: "20:00:00"
  action:
    - service: switch.turn_off
      data:
        entity_id: switch.smartplug_02


- alias: "Kiosk - Turn on screen"
  trigger:
    - platform: time
      at: "06:30:00"
  action:
    service: light.turn_on
    entity_id: light.kiosk

- alias: "Kiosk - Turn off screen"
  trigger:
    - platform: time
      at: "00:30:00"
  action:
    service: light.turn_off
    entity_id: light.kiosk





####################################################
#                                                  #
#                    Lights                        #
#                                                  #
####################################################


- alias: "Night - Turn off lights"
  trigger:
    - platform: time
      at: "01:00:00"
  action:
    service: scene.turn_on
    entity_id: scene.night_lights_off




####################################################
#                                                  #
#                    Alerts                        #
#                                                  #
####################################################

- alias: "Power consumption - Send alert > 3kw"
  trigger:
    - platform: numeric_state
      entity_id: sensor.shellyem_e45b64_channel_1_power
      above: 3100
      below: 4000
      for:
        hours: 0
        minutes: 3
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "Consumo elettrico > 3kw"
        message: "{{ states('sensor.shellyem_e45b64_channel_1_power') }} kw - Controlla gli elettrodomestici accesi"



- alias: "Power consumption - Send alert > 4kw"
  trigger:
    - platform: numeric_state
      entity_id: sensor.shellyem_e45b64_channel_1_power
      above: 4000
      below: 5000
      for:
        hours: 0
        minutes: 1
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "Consumo elettrico > 4kw"
        message: "{{ states('sensor.shellyem_e45b64_channel_1_power') }} kw - Spegni qualche elettrodomestico acceso"



- alias: "RPI - CPU High temperature"
  trigger:
    - platform: numeric_state
      entity_id: sensor.processor_temperature
      above: 65
      below: 80
      for:
        hours: 0
        minutes: 5
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "Raspberry - Temperatura CPU elevata"
        message: "{{ states('sensor.processor_temperature') }}° - Controlla i processi in esecuzione"



- alias: "Kiosk Offline"
  trigger:
    - platform: state
      entity_id: sensor.kiosk
      to: '0'
      for:
        hours: 0
        minutes: 5
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "M34 - Kiosk offline"
        message: "Controlla lo stato del tablet"



- alias: "Internet Offline"
  trigger:
    - platform: state
      entity_id: binary_sensor.internet_access
      to: 'off'
      for:
        hours: 0
        minutes: 1
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "M34 - Internet offline"
        message: "Controlla la connessione internet"



- alias: "Power down"
  trigger:
    - platform: state
      entity_id: sensor.shellyem_e45b64_channel_1_power
      to: 'unavailable'
      for:
        hours: 0
        minutes: 1
        seconds: 0
  action:
    - service: notify.pbf
      data:
        title: "M34 - é saltata la corrente"
        message: "Controlla il quadro elettrico e il contatore"



- alias: "Lavatrice - Wash completed"
  trigger:
    - platform: state
      entity_id: sensor.lavatrice
      from: "on"
      to: "off"
  condition: "{{ state_attr('sensor.lavatrice', 'pre_state') == 'Centrifuga'}}"
  action:
    - service: notify.pbf
      data:
        title: "Lavatrice - Lavaggio completato"
        message: "Vai a svuotare la lavatrice! {{ state_attr('sensor.lavatrice', 'pre_state') }}"

